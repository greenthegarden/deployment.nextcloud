---

- name: Install and configure Nextcloud on nodes within the nextcloud_instances group
  
  hosts: nextcloud_instances

  vars:

    nextcloud_network: nextcloud_network

    nextcloud_volume_data: nextcloud_data
    nextcloud_volume_recreate: always # one of: always, never or options-changed

    nextcloud_env_file: /tmp/nextcloud.env

    nextcloud_service_name: nextcloud
    nextcloud_service_ports_http: 8080
    nextcloud_service_ports: [
      { label: http, value: "{{ nextcloud_service_ports_http }}" }
    ]

    nextcloud_image_name: nextcloud
    nextcloud_image_tag: latest

  pre_tasks:

  tasks:

    - name: "Unregister {{ nextcloud_service_name }} service with the local consul agent"
      consul:
        host: "{{ consul_client_address }}"
        service_name: "{{ nextcloud_service_name }}-{{ item.value }}"
        state: absent
      loop: "{{ nextcloud_service_ports }}"
      when: service_consul_running

    - name: Remove Nextcloud container
      become: yes
      docker_container:
        name: "{{ nextcloud_service_name }}"
        state: absent
      when: nextcloud_volume_recreate != 'never'

    - name: Create environmental file
      template:
        src: "{{ playbook_dir }}/templates/nextcloud.env.j2"
        dest: "{{ nextcloud_env_file }}"

    - name: Create volume for Nextcloud container data
      become: yes
      docker_volume:
        name: "{{ nextcloud_volume_data }}"
        recreate: "{{ nextcloud_volume_recreate }}"
        state: present

    - name: "Pull image {{ nextcloud_image_name }}:{{ nextcloud_image_tag }}"
      become: yes
      docker_image:
        name: "{{ nextcloud_image_name }}"
        tag: "{{ nextcloud_image_tag }}"
        source: pull

    - name: Start Nextcloud container
      become: yes
      docker_container:
        name: "{{ nextcloud_service_name }}"
        image: "{{ nextcloud_image_name }}:{{ nextcloud_image_tag }}"
        dns_search_domains:
          - service.consul
        dns_servers:
          - "{{ consul_bind_address }}"
        env_file: "{{ nextcloud_env_file }}"
        published_ports:
          - 8080:80
        recreate: yes
        restart_policy: always
        state: started
        volumes:
          - "{{ nextcloud_volume_data }}:/var/www/html"
      register: nextcloud_service_launched

    - name: "Register {{ nextcloud_service_name }} service with the local consul agent"
      consul:
        host: "{{ consul_client_address }}"
        service_name: "{{ nextcloud_service_name }}-{{ item.value }}"
        service_port: "{{ item.value | int }}"
        service_address: "{{ ansible_host }}"
        state: present
      loop: "{{ nextcloud_service_ports }}"
      when: service_consul_running
